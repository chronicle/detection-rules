/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule rw_utilities_associated_with_ntdsdit_T1003_003 {

  meta:
    author = "Google Cloud Security"
    description = "Detects process launches from processes related to ntds against key servers"
    type = "alert"
    tags = "list"
    assumption = "Assumes lists for key servers and ntds suspicious processes have been created"
    data_source = "microsoft sysmon, microsoft windows events"
    platform = "Windows"
    tactic = "TA0006"
    technique = "T1003.003"
    severity = "High"
    priority = "High"

  events:
    $process.metadata.event_type = "PROCESS_LAUNCH"
    // ntds_suspicious_processes includes values like ntdsutil, vssadmin, diskshadow, esentutl
    // Parses full_path for the file name to match list (excluding .exe)
    re.capture($process.target.process.file.full_path, /.*\\(.*).exe/) in %ntds_suspicious_processes
    // Replace .stackedpad.local with your domain if your key_servers list just contains hostname versus fqdn
    // If using fqdn in your list, this re.replace function can be removed and a string match could be used instead
    re.replace($process.principal.hostname, ".stackedpads.local", "") in %key_servers
    $process.metadata.event_type = $event_type

 match:
  $event_type over 5m

 outcome:
    $risk_score = 85
    $event_count = count_distinct($process.metadata.id)
    // added to populate alert graph with additional context
    $principal_hostname = array_distinct($process.principal.hostname)
    $principal_process_pid = array_distinct($process.principal.process.pid)
    $principal_process_command_line = array_distinct($process.principal.process.command_line)
    $principal_process_file_sha256 = array_distinct($process.principal.process.file.sha256)
    $principal_process_file_full_path = array_distinct($process.principal.process.file.full_path)
    $principal_process_product_specfic_process_id = array_distinct($process.principal.process.product_specific_process_id)
    $principal_process_parent_process_product_specfic_process_id = array_distinct($process.principal.process.parent_process.product_specific_process_id)
    $target_process_pid = array_distinct($process.target.process.pid)
    $target_process_command_line = array_distinct($process.target.process.command_line)
    $target_process_file_sha256 = array_distinct($process.target.process.file.sha256)
    $target_process_file_full_path = array_distinct($process.target.process.file.full_path)
    $target_process_product_specfic_process_id = array_distinct($process.target.process.product_specific_process_id)
    $principal_user_userid = array_distinct($process.principal.user.userid)

  condition:
    $process
}
