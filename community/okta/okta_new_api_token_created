rule okta_new_api_token_created {

  meta:
    author = "Chronicle Security"
    description = "Detects when a new API token is created."
    reference = "https://developer.okta.com/docs/guides/tokens/"
    mitre_attack_tactic = "Defense Evasion, Persistence, Privilege Escalation, Initial Access"
    mitre_attack_technique = "Valid Accounts"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1078/"
    mitre_attack_version = "v13.1"
    type = "Alert"
    data_source = "Okta"
    severity = "Medium"
    priority = "Medium"

  events:
    $token.metadata.product_name = "Okta"
    $token.metadata.vendor_name = "Okta"
    $token.metadata.product_event_type = "system.api_token.create"
    $token.security_result.summary = "Create API token"
    $token.security_result.action = "ALLOW"
    $token.principal.user.userid = $userid

  match:
    $userid over 1h

  outcome:
    $mitre_attack_tactic = array_distinct("Defense Evasion, Persistence, Privilege Escalation, Initial Access")
    $mitre_attack_technique = array_distinct("Valid Accounts")
    $target_user_agent = array_distinct($token.network.http.user_agent)
    $principal_ip = array_distinct($token.principal.ip)
    $principal_ip_country = array_distinct($token.principal.ip_geo_artifact.location.country_or_region)
    $principal_ip_state = array_distinct($token.principal.ip_geo_artifact.location.state)
    $principal_ip_city = array_distinct($token.principal.location.city)
    $principal_user_email_addresses = array_distinct ($token.principal.user.email_addresses)
    $security_result_summary = array_distinct($token.security_result.summary)

  condition:
    $token
}
