rule okta_user_account_lockout {

  meta:
    author = "Chronicle Security"
    description = "Detects when a user's account is locked out or a user account has reached the lockout limit."
    reference = "https://www.okta.com/resources/whitepaper/how-adaptive-mfa-helps-mitigate-brute-force-attacks/"
    mitre_attack_tactic = "Defense Evasion, Persistence, Privilege Escalation, Initial Access"
    mitre_attack_technique = "Valid Accounts"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1078/"
    mitre_attack_version = "v13.1"
    type = "Alert"
    data_source = "Okta"
    severity = "Medium"
    priority = "Medium"

  events:
    $login.metadata.product_name = "Okta"
    $login.metadata.vendor_name = "Okta"
    (
        $login.metadata.product_event_type = "user.account.lock.limit" or
        $login.metadata.product_event_type = "user.account.lock"
    )
    $login.security_result.action = "BLOCK"
    $login.principal.user.userid = $userid

  match:
    $userid over 1h

  outcome:
    $mitre_attack_tactic = array_distinct("Defense Evasion, Persistence, Privilege Escalation, Initial Access")
    $mitre_attack_technique = array_distinct("Valid Accounts")
    $target_user_agent = array_distinct($login.network.http.user_agent)
    $principal_ip = array_distinct($login.principal.ip)
    $principal_ip_country = array_distinct($login.principal.ip_geo_artifact.location.country_or_region)
    $principal_ip_state = array_distinct($login.principal.ip_geo_artifact.location.state)
    $principal_ip_city = array_distinct($login.principal.location.city)
    $principal_user_email_addresses = array_distinct ($login.principal.user.email_addresses)
    $security_result_summary = array_distinct($login.security_result.summary)
    $security_result_category_details = array_distinct($login.security_result.category_details)

  condition:
    $login
}
