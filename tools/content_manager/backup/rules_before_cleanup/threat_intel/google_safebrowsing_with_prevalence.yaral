/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 rule google_safebrowsing_with_prevalence {

  meta:
    author = "Google Cloud Security"
    description = "Detect process launch events that correlate to Safe Browsing hash data and have low prevalence"
    rule_id = "mr_4b77947d-b7a5-4308-b54c-a87b2b1cb80f"
    rule_name = "Google Safebrowsing With Prevalence"
    type = "alert"
    tags = "safe browsing, prevalence"
    data_source = "microsoft sysmon"
    severity = "Critical"
    priority = "High"

  events:
    $execution.metadata.event_type = "PROCESS_LAUNCH"
    $execution.principal.hostname = $hostname
    $execution.target.process.file.sha256 = $hash

    // Safe Browsing file hashes provided by GCTI Feed
    $safebrowsing.graph.metadata.entity_type = "FILE"
    $safebrowsing.graph.metadata.threat.severity = "CRITICAL"
    $safebrowsing.graph.metadata.product_name = "Google Safe Browsing"
    $safebrowsing.graph.metadata.source_type = "GLOBAL_CONTEXT"
    $safebrowsing.graph.entity.file.sha256 = $hash

    //derived from events ingested by Chronicle
    $prevalence.graph.metadata.entity_type = "FILE"
    $prevalence.graph.metadata.source_type = "DERIVED_CONTEXT"
    $prevalence.graph.entity.file.prevalence.day_count = 10
    $prevalence.graph.entity.file.prevalence.rolling_max <= 3
    $prevalence.graph.entity.file.prevalence.rolling_max > 0
    $prevalence.graph.entity.file.sha256 = $hash

  match:
    $hostname, $hash over 5m

   outcome:
    $risk_score = 95
    $event_count = count_distinct($execution.metadata.id)
    // added to populate alert graph with additional context
    // Commented out principal.hostname because it is already represented in graph as match variable. If match changes, can uncomment to add to results
    //$principal_hostname = array_distinct($execution.principal.hostname)
    $principal_process_pid = array_distinct($execution.principal.process.pid)
    $principal_process_command_line = array_distinct($execution.principal.process.command_line)
    $principal_process_file_sha256 = array_distinct($execution.principal.process.file.sha256)
    $principal_process_file_full_path = array_distinct($execution.principal.process.file.full_path)
    $principal_process_product_specific_process_id = array_distinct($execution.principal.process.product_specific_process_id)
    $principal_process_parent_process_product_specific_process_id = array_distinct($execution.principal.process.parent_process.product_specific_process_id)
    $target_process_pid = array_distinct($execution.target.process.pid)
    $target_process_command_line = array_distinct($execution.target.process.command_line)
    $target_process_file_sha256 = array_distinct($execution.target.process.file.sha256)
    $target_process_file_full_path = array_distinct($execution.target.process.file.full_path)
    $target_process_product_specific_process_id = array_distinct($execution.target.process.product_specific_process_id)
    $principal_user_userid = array_distinct($execution.principal.user.userid)

  condition:
    $execution and $safebrowsing and $prevalence
}
